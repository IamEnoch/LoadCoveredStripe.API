// <auto-generated />
using System;
using LoadCoveredStripe.API.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoadCoveredStripe.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LoadCoveredStripe.API.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<string>("Address1")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("address_1");

                    b.Property<string>("Address2")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("address_2");

                    b.Property<string>("Address3")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("address_3");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime")
                        .HasColumnName("birth_date");

                    b.Property<DateTime?>("CheckoutDate")
                        .HasColumnType("datetime")
                        .HasColumnName("checkout_date");

                    b.Property<int?>("CheckoutUserId")
                        .HasColumnType("int")
                        .HasColumnName("checkout_user_id");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("Classification")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("classification");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("country");

                    b.Property<string>("County")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("county");

                    b.Property<double?>("CreditLimit")
                        .HasColumnType("double")
                        .HasColumnName("credit_limit");

                    b.Property<string>("CustomerClassificationCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("customer_classification_code");

                    b.Property<string>("CustomerInfo")
                        .HasColumnType("text")
                        .HasColumnName("customer_info");

                    b.Property<string>("CustomerLink")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("customer_link");

                    b.Property<string>("CustomerNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("customer_number");

                    b.Property<string>("CustomerPricingCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("customer_pricing_code");

                    b.Property<string>("CustomerType")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("customer_type");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime")
                        .HasColumnName("delete_date");

                    b.Property<int?>("DeleteUserId")
                        .HasColumnType("int")
                        .HasColumnName("delete_user_id");

                    b.Property<string>("Email")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("entry_date");

                    b.Property<int?>("EntryUserId")
                        .HasColumnType("int")
                        .HasColumnName("entry_user_id");

                    b.Property<string>("Fein")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fein");

                    b.Property<DateTime?>("InactiveDate")
                        .HasColumnType("datetime")
                        .HasColumnName("inactive_date");

                    b.Property<string>("InactiveReasonCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("inactive_reason_code");

                    b.Property<DateTime?>("InitialContactDate")
                        .HasColumnType("datetime")
                        .HasColumnName("initial_contact_date");

                    b.Property<int?>("InitialContactUserId")
                        .HasColumnType("int")
                        .HasColumnName("initial_contact_user_id");

                    b.Property<string>("InterfaceId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("interface_id");

                    b.Property<DateTime?>("LastContactDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_contact_date");

                    b.Property<int?>("LastContactUserId")
                        .HasColumnType("int")
                        .HasColumnName("last_contact_user_id");

                    b.Property<double?>("LastPaymentAmount")
                        .HasColumnType("double")
                        .HasColumnName("last_payment_amount");

                    b.Property<DateTime?>("LastPaymentReceivedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_payment_received_date");

                    b.Property<double?>("LastSaleAmount")
                        .HasColumnType("double")
                        .HasColumnName("last_sale_amount");

                    b.Property<DateTime?>("LastSaleDate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_sale_date");

                    b.Property<string>("LeadSource")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("lead_source");

                    b.Property<string>("LocationCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("location_code");

                    b.Property<string>("MailMergeName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("mail_merge_name");

                    b.Property<string>("Name1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name_1");

                    b.Property<string>("Name2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name_2");

                    b.Property<string>("Name3")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name_3");

                    b.Property<int?>("OwnerUserId")
                        .HasColumnType("int")
                        .HasColumnName("owner_user_id");

                    b.Property<string>("ParentCustomer")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("parent_customer");

                    b.Property<string>("PriceCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("price_code");

                    b.Property<string>("PrimaryContact")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("primary_contact");

                    b.Property<string>("PrimaryContactTitle")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("primary_contact_title");

                    b.Property<string>("PrimaryFax")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("primary_fax");

                    b.Property<string>("PrimaryPhone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("primary_phone");

                    b.Property<string>("PrintStatement")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("print_statement");

                    b.Property<string>("RestrictionCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("restriction_code");

                    b.Property<string>("RouteCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("route_code");

                    b.Property<string>("SalesStage")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sales_stage");

                    b.Property<string>("SalesrepCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("salesrep_code");

                    b.Property<string>("ServiceCharge")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("service_charge");

                    b.Property<string>("Ssn")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("ssn");

                    b.Property<string>("State")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("state");

                    b.Property<string>("SubaccountType")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("subaccount_type");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime")
                        .HasColumnName("sync_date");

                    b.Property<int?>("SyncLinkId")
                        .HasColumnType("int")
                        .HasColumnName("sync_link_id");

                    b.Property<string>("TaxGroupCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tax_group_code");

                    b.Property<string>("TermsCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("terms_code");

                    b.Property<int?>("UpdateCount")
                        .HasColumnType("int")
                        .HasColumnName("update_count");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int")
                        .HasColumnName("update_user_id");

                    b.Property<string>("Url")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("url");

                    b.Property<string>("User1")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("user_1");

                    b.Property<string>("User10")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("user_10");

                    b.Property<string>("User2")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("user_2");

                    b.Property<string>("User3")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("user_3");

                    b.Property<string>("User4")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("user_4");

                    b.Property<string>("User5")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("user_5");

                    b.Property<string>("User6")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("user_6");

                    b.Property<string>("User7")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("user_7");

                    b.Property<string>("User8")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("user_8");

                    b.Property<string>("User9")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("user_9");

                    b.Property<DateTime?>("VerifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("verified_date");

                    b.Property<int?>("VerifiedUserId")
                        .HasColumnType("int")
                        .HasColumnName("verified_user_id");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("zip_code");

                    b.HasKey("CustomerId")
                        .HasName("PRIMARY");

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("LoadCoveredStripe.API.Models.CustomerBilling", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CancelAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("cancel_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("CurrentPeriodEnd")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("current_period_end");

                    b.Property<DateTime?>("CurrentPeriodStart")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("current_period_start");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("PausedFrom")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("paused_from");

                    b.Property<DateTime?>("PausedUntil")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("paused_until");

                    b.Property<string>("PriceId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("price_id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("StripeCustomerId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("stripe_customer_id");

                    b.Property<string>("StripeSubscriptionId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("stripe_subscription_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("customer_billing", (string)null);
                });

            modelBuilder.Entity("LoadCoveredStripe.API.Models.PriceCatalog", b =>
                {
                    b.Property<string>("PriceId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("price_id");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("currency");

                    b.Property<string>("Interval")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("interval");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_active");

                    b.Property<DateTime>("LastSyncedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_synced_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<int?>("TrialDays")
                        .HasColumnType("int")
                        .HasColumnName("trial_days");

                    b.Property<long>("UnitAmount")
                        .HasColumnType("bigint")
                        .HasColumnName("unit_amount");

                    b.HasKey("PriceId");

                    b.ToTable("price_catalog", (string)null);
                });

            modelBuilder.Entity("LoadCoveredStripe.API.Models.CustomerBilling", b =>
                {
                    b.HasOne("LoadCoveredStripe.API.Models.Customer", "Customer")
                        .WithOne()
                        .HasForeignKey("LoadCoveredStripe.API.Models.CustomerBilling", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
